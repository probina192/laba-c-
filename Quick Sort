#include <iostream>
#include <vector>
#include <cstdlib>
#include <ctime>

int partition(int arr[], int low, int high)
{
    int pivot = arr[high]; 
    int i = (low - 1); 
 
    for (int j = low; j <= high - 1; j++) 
    {
        if (arr[j] <= pivot) {i++; 
            std::swap(arr[i], arr[j]);
        }
    }
    std::swap(arr[i + 1], arr[high]);
    return (i + 1);
}
 
int partition_r(int arr[], int low, int high)
{
    srand(time(NULL));
    int random = low + rand() % (high - low);
    std::swap(arr[random], arr[high]);
 
    return partition(arr, low, high);
}
 

void quickSort(int arr[], int low, int high)
{
    if (low < high) {
        int pi = partition_r(arr, low, high);
        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}
 
void printArray(int arr[], int size)
{
    int i;
    for (i = 0; i < size; i++)
        std::cout<<arr[i]<<" "; 
}
 
int main()
{
    int arr[] = { 23, 8, 2, 16, 1, 4, 11, 35, 6, 7 };
    int n = sizeof(arr) / sizeof(arr[0]);
     
    quickSort(arr, 0, n - 1);
    printf("Отсортированный массив: ");
    printArray(arr, n);
     
    return 0;
}
